// Firebase Firestore Security Rules for Chat System

rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    function isCoach() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isCoach == true;
    }
    
    function isAdminOrCoach() {
      return isAdmin() || isCoach();
    }
    
    function isUserDoc(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isCoachProfile(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.isCoach == true;
    }
    
    // User collection rules
    match /users/{userId} {
      // Anyone authenticated can read basic user profile info
      allow read: if isAuthenticated();
      
      // Users can only update their own profile
      allow update: if isUserDoc(userId);
      
      // Only admins or themselves can delete
      allow delete: if isUserDoc(userId) || isAdmin();
    }
    
    // Coach collection rules
    match /coaches/{coachId} {
      // Anyone authenticated can read coach profiles
      allow read: if isAuthenticated();
      
      // Only admins or the coach themselves can update coach profiles
      allow update: if isAdmin() || 
                    (isCoach() && 
                     exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.coachRef.id == coachId);
      
      allow create, delete: if isAdmin();
    }
    
    // Chat collection rules
    match /chats/{chatId} {
      // Only participants can read chats
      allow read: if isAuthenticated() && 
                  request.auth.uid in resource.data.participantIds;
      
      // Only participants can update chats
      allow update: if isAuthenticated() && 
                    request.auth.uid in resource.data.participantIds;
      
      // Chat creation is restricted based on user type
      allow create: if isAuthenticated() && 
                    request.auth.uid in request.resource.data.participantIds &&
                    (
                      // Admins and coaches can create chats with anyone
                      isAdminOrCoach() ||
                      // Regular users can only create chats with coaches
                      (
                        request.resource.data.participantIds.size() == 2 &&
                        (
                          request.resource.data.participantIds.hasAny(
                            // Check if any participant is a coach
                            function(userId) {
                              return userId != request.auth.uid && 
                                    get(/databases/$(database)/documents/users/$(userId)).data.isCoach == true;
                            }
                          )
                        )
                      )
                    );
      
      // Only participants can delete (group owners or admins in future)
      allow delete: if isAuthenticated() && 
                    (isAdmin() || request.auth.uid in resource.data.participantIds);
    }
    
    // Messages collection rules
    match /messages/{messageId} {
      // Only chat participants can read messages
      allow read: if isAuthenticated() && 
                  request.auth.uid in get(/databases/$(database)/documents/chats/$(resource.data.chatId)).data.participantIds;
      
      // Users can create messages if:
      // 1. They are authenticated
      // 2. They set themselves as the sender
      // 3. They are a participant in the chat
      allow create: if isAuthenticated() && 
                    request.auth.uid == request.resource.data.senderId &&
                    request.auth.uid in get(/databases/$(database)/documents/chats/$(request.resource.data.chatId)).data.participantIds;
      
      // Only message sender can update their messages
      allow update: if isAuthenticated() && 
                    (
                      // Message sender can fully update their own message
                      request.auth.uid == resource.data.senderId ||
                      // Or participants can only update the reactions field
                      (
                        request.auth.uid in get(/databases/$(database)/documents/chats/$(resource.data.chatId)).data.participantIds &&
                        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['reactions', 'isRead'])
                      )
                    );
      
      // Only message sender or admins can delete messages
      allow delete: if isAuthenticated() && 
                    (
                      request.auth.uid == resource.data.senderId ||
                      isAdmin()
                    );
    }
  }
} 